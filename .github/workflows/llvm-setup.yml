name: LLVM Project Build

on:
  workflow_call:

jobs:
  lit-tests:
    name: LLVM Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: LLVM cache check
        uses: actions/cache@v4
        id: llvm-cache
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: "/home/runner/llvm"
          # An explicit key for restoring and saving the cache
          key: "llvm"
          restore-keys: "llvm"
          
      - name: Setup Python
        if: steps.llvm-cache.outputs.cache-hit != 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Ninja
        if: steps.llvm-cache.outputs.cache-hit != 'true'
        uses: llvm/actions/install-ninja@main
      # actions/checkout deletes any existing files in the new git directory,
      # so this needs to either run before ccache-action or it has to use
      # clean: false.
      - uses: actions/checkout@v4
        if: steps.llvm-cache.outputs.cache-hit != 'true'
        with:
          fetch-depth: 250
      - name: Setup ccache
        if: steps.llvm-cache.outputs.cache-hit != 'true'
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          # A full build of llvm, clang, lld, and lldb takes about 250MB
          # of ccache space. There's not much reason to have more than this,
          # because we usually won't need to save cache entries from older
          # builds.  Also, there is an overall 10GB cache limit, and each
          # run creates a new cache entry so we want to ensure that we have
          # enough cache space for all the tests to run at once and still
          # fit under the 10 GB limit.
          max-size: 500M
          key: sccache-ubuntu-latest
          variant: sccache
          
      - name: Fetch LLVM
        if: steps.llvm-cache.outputs.cache-hit != 'true'
        uses: llvm/actions/get-llvm-project-src/@main
        with:
          ref: 3b5b5c1ec4a3095ab096dd780e84d7ab81f3d7ff
          repo: llvm/llvm-project

      - name: Build and Test
        if: steps.llvm-cache.outputs.cache-hit != 'true'
        uses: llvm/actions/build-test-llvm-project@main
        env:
          # Workaround for https://github.com/actions/virtual-environments/issues/5900.
          # This should be a no-op for non-mac OSes
          PKG_CONFIG_PATH: /usr/local/Homebrew/Library/Homebrew/os/mac/pkgconfig//12
        with:
          cmake_args: '-GNinja -DCMAKE_INSTALL_PREFIX="$HOME/llvm" -DLLVM_ENABLE_PROJECTS="clang;openmp" -DCMAKE_BUILD_TYPE=Release -DLLDB_INCLUDE_TESTS=OFF -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache'
          build_target: 'install'

      - name: Cache
        if: steps.llvm-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: "/home/runner/llvm"
          key: "llvm"

